{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joao_\\\\quiz-tennis\\\\quiz-tennis-frontend\\\\src\\\\pages\\\\Quiz.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { Container, ListGroup, ListGroupItem } from \"react-bootstrap\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Quiz = () => {\n  _s();\n  const options = {\n    border: 'solid rgba(0.5,0.5,0.5,0.2)',\n    borderRadius: \"10px\"\n  };\n  const question_style = {\n    border: 'solid rgba(0.5,0.5,0.5,0.2)',\n    borderRadius: \"10px\",\n    backgroundColor: \"#2F6BC1\",\n    color: \"#FFFFFF\"\n  };\n  const main = {\n    width: \"40%\",\n    margin: \"auto\"\n  };\n  const onClickNext = answer => {\n    setActiveQuestion(prev => prev + 1);\n    if (answer === correctAnswer) {\n      setSelectedAnswer(true);\n      console.log('right');\n    } else {\n      setSelectedAnswer(false);\n      console.log('wrong');\n    }\n  };\n  const [questions, setQuestions] = useState([]);\n  const [activeQuestion, setActiveQuestion] = useState(0);\n  const [selectedAnswer, setSelectedAnswer] = useState('');\n  /*const [result, setResult] = useState({\r\n      score: 0,\r\n      correctAnswers: 0,\r\n      wrongAnswers: 0,\r\n  })*/\n\n  useEffect(() => {\n    fetch('http://localhost:3001/api/questions').then(response => response.json()).then(data => setQuestions(data)).catch(error => console.error('Error fetching questions: ', error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    style: main,\n    children: questions.length > 0 &&\n    /*#__PURE__*/\n    // Check if questions array is not empty\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-center p-3 mb-4 mt-5\",\n        style: question_style,\n        children: questions[activeQuestion].question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n        vertical: true,\n        children: questions[activeQuestion].choices.map(answer => /*#__PURE__*/_jsxDEV(ListGroupItem, {\n          variant: \"secondary\",\n          className: \"mt-3\",\n          style: options,\n          action: true,\n          onClick: () => onClickNext(answer),\n          children: answer\n        }, answer, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n_s(Quiz, \"WLOYTYh8o4KyFSNLQxfqRSo9uf0=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useEffect","Container","ListGroup","ListGroupItem","useState","jsxDEV","_jsxDEV","Quiz","_s","options","border","borderRadius","question_style","backgroundColor","color","main","width","margin","onClickNext","answer","setActiveQuestion","prev","correctAnswer","setSelectedAnswer","console","log","questions","setQuestions","activeQuestion","selectedAnswer","fetch","then","response","json","data","catch","error","style","children","length","className","question","fileName","_jsxFileName","lineNumber","columnNumber","vertical","choices","map","variant","action","onClick","_c","$RefreshReg$"],"sources":["C:/Users/joao_/quiz-tennis/quiz-tennis-frontend/src/pages/Quiz.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { Container, ListGroup, ListGroupItem } from \"react-bootstrap\";\r\nimport { useState } from \"react\";\r\n\r\nconst Quiz = () => {\r\n    \r\n    const options = {\r\n        border: 'solid rgba(0.5,0.5,0.5,0.2)',\r\n        borderRadius: \"10px\", \r\n    };\r\n    \r\n    const question_style = {\r\n        border: 'solid rgba(0.5,0.5,0.5,0.2)',\r\n        borderRadius: \"10px\",\r\n        backgroundColor: \"#2F6BC1\",\r\n        color: \"#FFFFFF\",\r\n    };\r\n    \r\n    const main = {\r\n        width: \"40%\",\r\n        margin: \"auto\",\r\n    }\r\n    \r\n    const onClickNext = (answer) => {\r\n        setActiveQuestion((prev) => prev + 1);\r\n\r\n        if(answer === correctAnswer) {\r\n            setSelectedAnswer(true)\r\n            console.log('right')\r\n        }\r\n        else {\r\n            setSelectedAnswer(false)\r\n            console.log('wrong')\r\n        }\r\n    };\r\n    \r\n    const [questions, setQuestions] = useState([]);\r\n    const [activeQuestion, setActiveQuestion] = useState(0);\r\n    const [selectedAnswer, setSelectedAnswer] = useState('')\r\n    /*const [result, setResult] = useState({\r\n        score: 0,\r\n        correctAnswers: 0,\r\n        wrongAnswers: 0,\r\n    })*/\r\n    \r\n    useEffect(() => {\r\n        fetch('http://localhost:3001/api/questions')\r\n        .then(response => response.json())\r\n        .then(data => setQuestions(data))\r\n        .catch(error => console.error('Error fetching questions: ', error));\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <Container style={main}>\r\n            {questions.length > 0 && ( // Check if questions array is not empty\r\n                <div>\r\n                    <h3 className=\"text-center p-3 mb-4 mt-5\" style={question_style}>\r\n                        {questions[activeQuestion].question}\r\n                    </h3>\r\n                    <ListGroup vertical>\r\n                        {questions[activeQuestion].choices.map((answer) => (\r\n                            <ListGroupItem variant=\"secondary\" className=\"mt-3\" style={options} action onClick={() => onClickNext(answer)} key={answer}>\r\n                                {answer}\r\n                            </ListGroupItem>\r\n                        ))}\r\n                    </ListGroup>\r\n                </div>\r\n            )}\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Quiz;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}