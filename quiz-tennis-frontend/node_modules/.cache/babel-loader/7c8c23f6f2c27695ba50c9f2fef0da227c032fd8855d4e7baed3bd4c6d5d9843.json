{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joao_\\\\quiz-tennis\\\\quiz-tennis-frontend\\\\src\\\\pages\\\\Quiz.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { Container, ListGroup, ListGroupItem } from \"react-bootstrap\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Quiz = () => {\n  _s();\n  const alertClicked = () => {\n    alert('You clicked one of the buttons!');\n  };\n  const options = {\n    border: 'solid rgba(0.5,0.5,0.5,0.2)',\n    borderRadius: \"10px\"\n  };\n  const question_style = {\n    border: 'solid rgba(0.5,0.5,0.5,0.2)',\n    borderRadius: \"10px\",\n    backgroundColor: \"#2F6BC1\",\n    color: \"#FFFFFF\"\n  };\n  const main = {\n    width: \"40%\",\n    margin: \"auto\"\n  };\n  const [questions, setQuestions] = useState([]);\n  const [activeQuestion, setActiveQuestion] = useState(0);\n  //const [selectedAnswer, setSelectedAnswer] = useState('')\n  /*const [result, setResult] = useState({\r\n      score: 0,\r\n      correctAnswers: 0,\r\n      wrongAnswers: 0,\r\n  })*/\n\n  useEffect(() => {\n    fetch('http://localhost:3001/api/questions').then(response => response.json()).then(data => setQuestions(data))\n    /*.then(response => {\r\n        setQuestions(response.data);\r\n        console.log(questions + \"wrwr   \");\r\n    })*/.catch(error => console.error('Error fetching questions: ', error));\n    //console.log(questions[0].question + \"________\");\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: questions.length > 0 &&\n      /*#__PURE__*/\n      // Check if questions array is not empty\n      _jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-center p-3 mb-4 mt-5\",\n          children: questions[0].question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(ListGroup, {\n          vertical: true,\n          children: [/*#__PURE__*/_jsxDEV(ListGroupItem, {\n            variant: \"secondary\",\n            className: \"mt-3\",\n            action: true,\n            onClick: alertClicked,\n            children: \"1st Answer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ListGroupItem, {\n            variant: \"secondary\",\n            className: \"mt-3\",\n            action: true,\n            onClick: alertClicked,\n            children: \"2nd Answer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ListGroupItem, {\n            variant: \"secondary\",\n            className: \"mt-3\",\n            action: true,\n            onClick: alertClicked,\n            children: \"3rd Answer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ListGroupItem, {\n            variant: \"secondary\",\n            className: \"mt-3\",\n            action: true,\n            onClick: alertClicked,\n            children: \"4th Answer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n_s(Quiz, \"jlQZ8aHckNcFZyTLE55f1xZTRyc=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useEffect","Container","ListGroup","ListGroupItem","useState","jsxDEV","_jsxDEV","Quiz","_s","alertClicked","alert","options","border","borderRadius","question_style","backgroundColor","color","main","width","margin","questions","setQuestions","activeQuestion","setActiveQuestion","fetch","then","response","json","data","catch","error","console","children","length","className","question","fileName","_jsxFileName","lineNumber","columnNumber","vertical","variant","action","onClick","_c","$RefreshReg$"],"sources":["C:/Users/joao_/quiz-tennis/quiz-tennis-frontend/src/pages/Quiz.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { Container, ListGroup, ListGroupItem } from \"react-bootstrap\";\r\nimport { useState } from \"react\";\r\n\r\nconst Quiz = () => {\r\n\r\n    const alertClicked = () => {\r\n        alert('You clicked one of the buttons!');\r\n    };\r\n\r\n    const options = {\r\n        border: 'solid rgba(0.5,0.5,0.5,0.2)',\r\n        borderRadius: \"10px\", \r\n    };\r\n\r\n    const question_style = {\r\n        border: 'solid rgba(0.5,0.5,0.5,0.2)',\r\n        borderRadius: \"10px\",\r\n        backgroundColor: \"#2F6BC1\",\r\n        color: \"#FFFFFF\",\r\n    };\r\n\r\n    const main = {\r\n        width: \"40%\",\r\n        margin: \"auto\",\r\n    }\r\n\r\n    const [questions, setQuestions] = useState([]);\r\n    const [activeQuestion, setActiveQuestion] = useState(0)\r\n    //const [selectedAnswer, setSelectedAnswer] = useState('')\r\n    /*const [result, setResult] = useState({\r\n        score: 0,\r\n        correctAnswers: 0,\r\n        wrongAnswers: 0,\r\n    })*/\r\n    \r\n    useEffect(() => {\r\n        fetch('http://localhost:3001/api/questions')\r\n        .then(response => response.json())\r\n        .then(data => setQuestions(data))\r\n        /*.then(response => {\r\n            setQuestions(response.data);\r\n            console.log(questions + \"wrwr   \");\r\n        })*/\r\n        .catch(error => console.error('Error fetching questions: ', error));\r\n        //console.log(questions[0].question + \"________\");\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <Container>\r\n      <div>\r\n        {questions.length > 0 && ( // Check if questions array is not empty\r\n          <div>\r\n            <h3 className=\"text-center p-3 mb-4 mt-5\">{questions[0].question}</h3> {/* Display the first question */}\r\n            <ListGroup vertical>\r\n              {/* Render answer options */}\r\n              <ListGroupItem variant=\"secondary\" className=\"mt-3\" action onClick={alertClicked}>\r\n                1st Answer\r\n              </ListGroupItem>\r\n              <ListGroupItem variant=\"secondary\" className=\"mt-3\" action onClick={alertClicked}>\r\n                2nd Answer\r\n              </ListGroupItem>\r\n              <ListGroupItem variant=\"secondary\" className=\"mt-3\" action onClick={alertClicked}>\r\n                3rd Answer\r\n              </ListGroupItem>\r\n              <ListGroupItem variant=\"secondary\" className=\"mt-3\" action onClick={alertClicked}>\r\n                4th Answer\r\n              </ListGroupItem>\r\n            </ListGroup>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </Container>\r\n    );\r\n}\r\n\r\nexport default Quiz;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,SAAS,EAAEC,SAAS,EAAEC,aAAa,QAAQ,iBAAiB;AACrE,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEf,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACvBC,KAAK,CAAC,iCAAiC,CAAC;EAC5C,CAAC;EAED,MAAMC,OAAO,GAAG;IACZC,MAAM,EAAE,6BAA6B;IACrCC,YAAY,EAAE;EAClB,CAAC;EAED,MAAMC,cAAc,GAAG;IACnBF,MAAM,EAAE,6BAA6B;IACrCC,YAAY,EAAE,MAAM;IACpBE,eAAe,EAAE,SAAS;IAC1BC,KAAK,EAAE;EACX,CAAC;EAED,MAAMC,IAAI,GAAG;IACTC,KAAK,EAAE,KAAK;IACZC,MAAM,EAAE;EACZ,CAAC;EAED,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACkB,cAAc,EAAEC,iBAAiB,CAAC,GAAGnB,QAAQ,CAAC,CAAC,CAAC;EACvD;EACA;AACJ;AACA;AACA;AACA;;EAEIJ,SAAS,CAAC,MAAM;IACZwB,KAAK,CAAC,qCAAqC,CAAC,CAC3CC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIP,YAAY,CAACO,IAAI,CAAC;IAChC;AACR;AACA;AACA,QAHQ,CAICC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC,CAAC;IACnE;EACJ,CAAC,EAAE,EAAE,CAAC;EAGN,oBACIxB,OAAA,CAACL,SAAS;IAAA+B,QAAA,eACZ1B,OAAA;MAAA0B,QAAA,EACGZ,SAAS,CAACa,MAAM,GAAG,CAAC;MAAA;MAAM;MACzB3B,OAAA;QAAA0B,QAAA,gBACE1B,OAAA;UAAI4B,SAAS,EAAC,2BAA2B;UAAAF,QAAA,EAAEZ,SAAS,CAAC,CAAC,CAAC,CAACe;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,KAAC,eACvEjC,OAAA,CAACJ,SAAS;UAACsC,QAAQ;UAAAR,QAAA,gBAEjB1B,OAAA,CAACH,aAAa;YAACsC,OAAO,EAAC,WAAW;YAACP,SAAS,EAAC,MAAM;YAACQ,MAAM;YAACC,OAAO,EAAElC,YAAa;YAAAuB,QAAA,EAAC;UAElF;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAe,CAAC,eAChBjC,OAAA,CAACH,aAAa;YAACsC,OAAO,EAAC,WAAW;YAACP,SAAS,EAAC,MAAM;YAACQ,MAAM;YAACC,OAAO,EAAElC,YAAa;YAAAuB,QAAA,EAAC;UAElF;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAe,CAAC,eAChBjC,OAAA,CAACH,aAAa;YAACsC,OAAO,EAAC,WAAW;YAACP,SAAS,EAAC,MAAM;YAACQ,MAAM;YAACC,OAAO,EAAElC,YAAa;YAAAuB,QAAA,EAAC;UAElF;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAe,CAAC,eAChBjC,OAAA,CAACH,aAAa;YAACsC,OAAO,EAAC,WAAW;YAACP,SAAS,EAAC,MAAM;YAACQ,MAAM;YAACC,OAAO,EAAElC,YAAa;YAAAuB,QAAA,EAAC;UAElF;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAe,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACP,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT;IACN;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEhB,CAAC;AAAA/B,EAAA,CAvEKD,IAAI;AAAAqC,EAAA,GAAJrC,IAAI;AAyEV,eAAeA,IAAI;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}